{"version":3,"sources":["components/Headers/Header.js","components/Inputs/Input.js","pages/goal_categories/GoalCategoryForm.js","pages/goal_categories/ModifyGoalCategory.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","reactstrap__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","props","a","createElement","className","fluid","children","MyInput","_ref","name","label","rest","Object","_Users_usamashehzad_Desktop_Projects_believeit_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_useFormikContext","useFormikContext","values","errors","touched","setFieldValue","value","error","classes","react__WEBPACK_IMPORTED_MODULE_1___default","reactstrap__WEBPACK_IMPORTED_MODULE_2__","reactstrap__WEBPACK_IMPORTED_MODULE_3__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","assign","autoComplete","onChange","e","target","GoalCategoryForm","initialValues","onSubmit","react_default","formik_esm","color","validationSchema","Yup","shape","trim","min","required","max","matches","enableReinitialize","_ref2","isSubmitting","submitForm","Input","placeholder","react_color_es","hex","Button","disabled","type","onClick","ModifyGoalCategory","match","history","_useState","useState","_id","_useState2","slicedToArray","category","setCategory","identifier","params","useEffect","loadCategory","asyncToGenerator","regenerator_default","mark","_callee","id","res","wrap","_context","prev","next","http","get","url","sent","data","t0","t1","response","status","handleErrors","replace","basePath","abrupt","stop","_x","apply","this","arguments","submitHandler","_ref4","_callee2","body","_ref3","setSubmitting","setErrors","_res","_context2","post","put","finish","_x2","_x3","Fragment","Header","Container","Card","CardHeader","CardBody","goal_categories_GoalCategoryForm"],"mappings":"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","file":"static/js/22.9f5b251c.chunk.js","sourcesContent":["import React from \"react\";\nimport { Container } from \"reactstrap\";\n\nexport default (props) => {\n  return (\n    <div className=\"header bg-gradient-info pb-8 pt-5 pt-md-8\">\n      <Container fluid>{props.children}</Container>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { FormGroup, Input, Label } from \"reactstrap\";\n\nimport { useFormikContext } from \"formik\";\n\nconst MyInput = ({ name, label, ...rest }) => {\n  const { values, errors, touched, setFieldValue } = useFormikContext();\n  const value = values[name];\n  const error = touched[name] && errors[name];\n  let classes = \" form-control form-control-alternative text-black\";\n  if (error) {\n    classes = classes + \" border border-danger\";\n  }\n  return (\n    <FormGroup>\n      {label && <Label className=\"form-control-label\">{label}</Label>}\n      <Input\n        {...rest}\n        className={classes}\n        autoComplete=\"off\"\n        value={value}\n        onChange={(e) => {\n          setFieldValue(name, e.target.value);\n        }}\n      />\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </FormGroup>\n  );\n};\n\nexport default MyInput;\n","import React from \"react\";\n\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport { ChromePicker } from \"react-color\";\n\nimport { Button } from \"reactstrap\";\nimport Input from \"../../components/Inputs/Input\";\n\nconst GoalCategoryForm = ({ initialValues, onSubmit }) => {\n  return (\n    <Formik\n      initialValues={initialValues || { name: \"\", color: \"#000000\" }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string().trim().min(1).required(),\n        color: Yup.string()\n          .trim()\n          .min(4)\n          .max(7)\n          .matches(/^#([0-9a-f]{3}|[0-9a-f]{6})$/i, \"color code is invalid!\")\n          .required(),\n      })}\n      onSubmit={onSubmit}\n      enableReinitialize\n    >\n      {({\n        values,\n        errors,\n        touched,\n        setFieldValue,\n        isSubmitting,\n        submitForm,\n      }) => {\n        return (\n          <Form>\n            <div className=\"row\">\n              <div className=\"col-lg-8 col-md-6 col-sm-12\">\n                <Input name=\"name\" placeholder=\"Name\" />\n              </div>\n              <div className=\"col-lg-4 col-md-6 col-sm-12 mb-sm-4\">\n                <ChromePicker\n                  color={values.color}\n                  onChange={(color) => {\n                    setFieldValue(\"color\", color.hex);\n                  }}\n                />\n                {touched[\"color\"] && errors[\"color\"] && (\n                  <div className=\"alert alert-danger\">{errors[\"color\"]}</div>\n                )}\n              </div>\n              <div className=\"col-12 text-center\">\n                <Button\n                  color=\"primary\"\n                  disabled={isSubmitting}\n                  type=\"submit\"\n                  onClick={submitForm}\n                >\n                  Save\n                </Button>\n              </div>\n            </div>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default GoalCategoryForm;\n","import React, { useState, useEffect } from \"react\";\nimport { Container, Card, CardHeader, CardBody } from \"reactstrap\";\nimport Header from \"../../components/Headers/Header\";\nimport { basePath } from \"../../configs\";\nimport { handleErrors } from \"../../helpers/error\";\n\nimport http from \"../../services/http\";\n\nimport GoalCategoryForm from \"./GoalCategoryForm\";\n\nconst api_endpoint = \"/goal_categories/\";\n\nconst ModifyGoalCategory = ({ match, history }) => {\n  const [category, setCategory] = useState({\n    name: \"\",\n    color: \"#000000\",\n    _id: \"\",\n  });\n  const { identifier } = match.params;\n\n  useEffect(() => {\n    if (identifier !== \"add\" && identifier !== category._id)\n      loadCategory(identifier);\n  }, [identifier]);\n\n  const loadCategory = async (id) => {\n    try {\n      const res = await http.get({ url: api_endpoint + identifier });\n      setCategory(res.data);\n    } catch (err) {\n      switch (err.response.status) {\n        case 404:\n          handleErrors(\"Category not found!\");\n          history.replace(basePath + \"/goal_categories/\");\n          break;\n        default:\n          handleErrors(\"Something went wrong!\");\n      }\n    }\n  };\n\n  const submitHandler = async (body, { setSubmitting, setErrors }) => {\n    try {\n      if (identifier === \"add\") {\n        const res = await http.post({ url: api_endpoint, body });\n        setCategory(res.data);\n        history.replace(basePath + \"/goal_categories/\" + res.data._id);\n      } else {\n        const res = await http.put({\n          url: api_endpoint + identifier,\n          body,\n        });\n        setCategory(res.data);\n      }\n    } catch (err) {\n      switch (err.response.status) {\n        case 400:\n          setErrors(err.response.data.error);\n          break;\n        case 404:\n          handleErrors(\"This category is deleted\");\n          break;\n        default:\n          handleErrors(\"Something went wrong!\");\n      }\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <>\n      <Header />\n      <Container className=\"mt--7\">\n        <Card className=\"shadow\">\n          <CardHeader>\n            <div className=\"clearfix\">\n              <h2 className=\"mb-0 float-left\">\n                {identifier === \"add\" ? \"Add Goal Category\" : category.name}\n              </h2>\n            </div>\n          </CardHeader>\n          <CardBody className=\"bg-secondary\">\n            <GoalCategoryForm\n              onSubmit={submitHandler}\n              initialValues={{ name: category.name, color: category.color }}\n            />\n          </CardBody>\n        </Card>\n      </Container>\n    </>\n  );\n};\n\nexport default ModifyGoalCategory;\n"],"sourceRoot":""}