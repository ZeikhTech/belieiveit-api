{"version":3,"sources":["components/Headers/Header.js","components/Inputs/Input.js","components/Inputs/SearchSelect.js","pages/prayers/PrayerForm.js","pages/prayers/ModifyPrayer.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","reactstrap__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","props","a","createElement","className","fluid","children","MyInput","_ref","name","label","rest","Object","_Users_usamashehzad_Desktop_Projects_believeit_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_useFormikContext","useFormikContext","values","errors","touched","setFieldValue","value","error","classes","react__WEBPACK_IMPORTED_MODULE_1___default","reactstrap__WEBPACK_IMPORTED_MODULE_2__","reactstrap__WEBPACK_IMPORTED_MODULE_3__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","assign","autoComplete","onChange","e","target","react_select__WEBPACK_IMPORTED_MODULE_2__","style","color","prayerDaysOptions","PrayerForm","initialValues","onSubmit","react_default","formik_esm","prayer","translation","prayerDays","type","validationSchema","Yup","shape","trim","min","required","optional","of","enableReinitialize","_ref2","isSubmitting","submitForm","Input","placeholder","SearchSelect","isMulti","options","map","v","find","p","arguments","length","undefined","Button","disabled","onClick","ModifyPrayer","match","history","identifier","params","_useState","useState","_id","_useState2","slicedToArray","setPrayer","useEffect","loadPrayer","asyncToGenerator","regenerator_default","mark","_callee","id","res","wrap","_context","prev","next","http","get","url","sent","data","t0","t1","response","status","handleErrors","replace","basePath","abrupt","stop","_x","apply","this","submitHandler","_ref4","_callee2","body","_ref3","setSubmitting","setErrors","_res","_context2","post","put","toast","success","ToastBody","title","message","goBack","finish","_x2","_x3","Fragment","Header","Container","Card","CardHeader","CardBody","prayers_PrayerForm"],"mappings":"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","file":"static/js/20.a0fcce96.chunk.js","sourcesContent":["import React from \"react\";\nimport { Container } from \"reactstrap\";\n\nexport default (props) => {\n  return (\n    <div className=\"header bg-gradient-info pb-8 pt-5 pt-md-8\">\n      <Container fluid>{props.children}</Container>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { FormGroup, Input, Label } from \"reactstrap\";\n\nimport { useFormikContext } from \"formik\";\n\nconst MyInput = ({ name, label, ...rest }) => {\n  const { values, errors, touched, setFieldValue } = useFormikContext();\n  const value = values[name];\n  const error = touched[name] && errors[name];\n  let classes = \" form-control form-control-alternative text-black\";\n  if (error) {\n    classes = classes + \" border border-danger\";\n  }\n  return (\n    <FormGroup>\n      {label && <Label className=\"form-control-label\">{label}</Label>}\n      <Input\n        {...rest}\n        className={classes}\n        autoComplete=\"off\"\n        value={value}\n        onChange={(e) => {\n          setFieldValue(name, e.target.value);\n        }}\n      />\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </FormGroup>\n  );\n};\n\nexport default MyInput;\n","import React from \"react\";\nimport Select from \"react-select\";\n\nexport default (props) => {\n  const { error, label, value } = props;\n  let classes = \"my-select\";\n  if (error) {\n    classes = classes + \" my-input-error\";\n  }\n\n  return (\n    <div className=\"form-group\">\n      {label && <label>{label}</label>}\n      <Select\n        // styles={customStyles}\n        {...props}\n        className={classes}\n      />\n      {error && (\n        <p className=\"my-input-error-text\" style={{ color: \"red\" }}>\n          {error}\n        </p>\n      )}\n    </div>\n  );\n};\n\nconst customStyles = {\n  control: (provided) => ({\n    ...provided,\n    border: \"none\",\n    outline: \"none\",\n    boxShadow: \"none\",\n  }),\n};\n","import React, { useState, useEffect } from \"react\";\n\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport { Button } from \"reactstrap\";\n\nimport Input from \"../../components/Inputs/Input\";\nimport SearchSelect from \"../../components/Inputs/SearchSelect\";\n\nconst prayerDaysOptions = [\n  { label: \"Anytime\", value: \"anytime\" },\n  { label: \"Monday\", value: \"monday\" },\n  { label: \"Tuesday\", value: \"tuesday\" },\n  { label: \"Wednesday\", value: \"wednesday\" },\n  { label: \"Thursday\", value: \"thursday\" },\n  { label: \"Friday\", value: \"friday\" },\n  { label: \"Saturday\", value: \"saturday\" },\n  { label: \"Sunday\", value: \"sunday\" },\n];\nconst PrayerForm = ({ initialValues, onSubmit }) => {\n  return (\n    <Formik\n      initialValues={\n        initialValues || {\n          name: \"\",\n          prayer: \"\",\n          translation: \"\",\n          prayerDays: [],\n          type: \"text_prayer\",\n        }\n      }\n      validationSchema={Yup.object().shape({\n        name: Yup.string().trim().min(3).required(),\n        prayer: Yup.string().required(),\n        translation: Yup.string().optional(),\n        prayerDays: Yup.array().of(Yup.string().required()).required(),\n      })}\n      onSubmit={onSubmit}\n      enableReinitialize\n    >\n      {({\n        values,\n        touched,\n        errors,\n        setFieldValue,\n        isSubmitting,\n        submitForm,\n      }) => {\n        return (\n          <Form>\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <Input\n                  label=\"Name\"\n                  name=\"name\"\n                  placeholder=\"Name of the prayer.\"\n                />\n              </div>\n\n              <div className=\"col-12\">\n                <Input\n                  label=\"Prayer\"\n                  name=\"prayer\"\n                  placeholder=\"prayer\"\n                  type=\"textarea\"\n                />\n              </div>\n              <div className=\"col-12\">\n                <Input\n                  label=\"Translation\"\n                  name=\"translation\"\n                  placeholder=\"transltaion\"\n                  type=\"textarea\"\n                />\n              </div>\n\n              <div className=\"col-12\">\n                <SearchSelect\n                  label=\"Repeating Days\"\n                  isMulti\n                  options={prayerDaysOptions}\n                  value={values.prayerDays.map((v) => {\n                    return prayerDaysOptions.find((p) => p.value === v);\n                  })}\n                  onChange={(values = []) => {\n                    if (values === null) values = [];\n\n                    setFieldValue(\n                      \"prayerDays\",\n                      values.map((v) => v.value)\n                    );\n                  }}\n                  error={touched[\"prayerDays\"] && errors[\"prayerDays\"]}\n                />\n              </div>\n\n              <div className=\"col-12 text-center\">\n                <Button\n                  color=\"primary\"\n                  disabled={isSubmitting}\n                  type=\"submit\"\n                  onClick={submitForm}\n                >\n                  Save\n                </Button>\n              </div>\n            </div>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default PrayerForm;\n","import React, { useState, useEffect } from \"react\";\nimport { Container, Card, CardHeader, CardBody } from \"reactstrap\";\nimport Header from \"../../components/Headers/Header\";\nimport { basePath } from \"../../configs\";\nimport { handleErrors } from \"../../helpers/error\";\nimport { toast } from \"react-toastify\";\nimport ToastBody from \"../../components/Popups/ToastBody\";\n\nimport http from \"../../services/http\";\n\nimport PrayerForm from \"./PrayerForm\";\n\nconst api_endpoint = \"/prayers/\";\n\nconst ModifyPrayer = ({ match, history }) => {\n  const { identifier } = match.params;\n\n  const [prayer, setPrayer] = useState({\n    name: \"\",\n    prayer: \"\",\n    translation: \"\",\n    prayerDays: [\"anytime\"],\n    type: \"text_prayer\",\n    _id: \"\",\n  });\n\n  useEffect(() => {\n    if (identifier !== \"add\" && identifier !== prayer._id)\n      loadPrayer(identifier);\n  }, [identifier]);\n\n  const loadPrayer = async (id) => {\n    try {\n      const res = await http.get({ url: api_endpoint + identifier });\n      setPrayer(res.data);\n    } catch (err) {\n      switch (err.response.status) {\n        case 404:\n          handleErrors(\"Category not found!\");\n          history.replace(basePath + \"/prayers/\");\n          break;\n        default:\n          handleErrors(\"Something went wrong!\");\n      }\n    }\n  };\n\n  const submitHandler = async (body, { setSubmitting, setErrors }) => {\n    try {\n      if (identifier === \"add\") {\n        const res = await http.post({ url: api_endpoint, body });\n        setPrayer(res.data);\n      } else {\n        const res = await http.put({\n          url: api_endpoint + identifier,\n          body,\n        });\n        setPrayer(res.data);\n      }\n\n      toast.success(\n        <ToastBody\n          title=\"Success\"\n          message={\n            identifier === \"add\"\n              ? \"Prayer Created Successfully.\"\n              : \"Prayer Updated Successfully.\"\n          }\n        />\n      );\n      history.goBack();\n    } catch (err) {\n      switch (err.response.status) {\n        case 400:\n          setErrors(err.response.data.error);\n          break;\n        case 404:\n          handleErrors(\"This Prayer is deleted\");\n          break;\n        default:\n          handleErrors(\"Something went wrong!\");\n      }\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <>\n      <Header />\n      <Container className=\"mt--7\">\n        <Card className=\"shadow\">\n          <CardHeader>\n            <div className=\"clearfix\">\n              <h2 className=\"mb-0 float-left\">\n                {identifier === \"add\" ? \"Add Prayer\" : \"Edit Prayer\"}\n              </h2>\n            </div>\n          </CardHeader>\n          <CardBody className=\"bg-secondary\">\n            <PrayerForm\n              onSubmit={submitHandler}\n              initialValues={{\n                name: prayer.name,\n                prayer: prayer.prayer,\n                translation: prayer.translation,\n                prayerDays: prayer.prayerDays,\n                type: prayer.type,\n              }}\n            />\n          </CardBody>\n        </Card>\n      </Container>\n    </>\n  );\n};\n\nexport default ModifyPrayer;\n"],"sourceRoot":""}